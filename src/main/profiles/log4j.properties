### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=INFO, rollingFile 
 
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.File=${catalina.home}/logs/rrdws.log
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n
log4j.appender.rollingFile.MaxFileSize=10MB
log4j.appender.rollingFile.MaxBackupIndex=5
log4j.appender.rollingFile.append=true

## Nice appender, which perform "advanced self-monitoring via logging (WHO NEED THIS - just the Q ;)
## JMX logging (slf4j -> log4j -> jmxlog -> rrdKeeper)
#log4j.category.JMX=INFO, JMX
#log4j.appender.JMX=ws.rrd.logback.JMXAppender
#log4j.appender.JMX.ObjectName=rrdMXLogger:type=ws.rrd.logback.JMXAppender
##MBeanServer - use this setting to specify the MBeanServer instance to use. By default, JmxLogger will use the platform MBeanServer is none is specified or if this property is set to "platform". Or you can specify the name of the MBeanServer's domain and JmxLogger will attempt to use that. 
#log4j.appender.JMX.MBeanServer=platform
#log4j.appender.JMX.FilterExpression=1 == 1
#log4j.appender.JMX.layout=org.apache.log4j.PatternLayout
#log4j.appender.JMX.layout.ConversionPattern=%-6r [%15.15t] %-5p %30.30c %x - %m%n


 ### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=::RRDws:: %r %5p [%d{dd MM HH:mm:ss}] %x %c{1} - %m%n
 